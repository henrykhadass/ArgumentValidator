# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: DownloadSecureFile@1
  name: "AssemblyOriginatorKeyFile"
  displayName: 'Download Strong Name Public Key'
  inputs:
    secureFile: '$(SecureFileId)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  
- task: DotNetCoreCLI@2
  displayName: 'DotNet Restore'
  inputs:
    command: restore
    projects: ArgumentValidator/ArgumentValidator.sln
    feedsToUse: config
    verbosityRestore: Normal

- task: DotNetCoreCLI@2
  displayName: 'DotNet Build'
  inputs:
    command: build
    projects: ArgumentValidator/ArgumentValidator.sln

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning dlls'
  inputs:
    ConnectedServiceName: '$(EsrpEndpointName)'
    FolderPath: '$(build.sourcesdirectory)'
    Pattern: '$(build.taskinput.sign)'
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [{
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
     {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "FileDigest",
                 "parameterValue": "/fd \"SHA256\""
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DotNetCoreCLI@2
  displayName: 'DotNet Test'
  inputs:
    command: test
    projects: ArgumentValidator/ArgumentValidator.sln

- task: DotNetCoreCLI@2
  displayName: 'DotNet Pack'
  inputs:
    command: pack
    packagesToPack: ArgumentValidator/ArgumentValidator.sln
    nobuild: true
    packDirectory: '$(PackageFolder)'
    verbosityPack: Normal
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning Packages'
  inputs:
    ConnectedServiceName: '$(EsrpEndpointName)'
    FolderPath: '$(PackageFolder)'
    Pattern: '*.nupkg'
    signConfigType: inlineSignParams
    inlineOperation: |
     [{
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Packages'
  inputs:
    PathtoPublish: '$(PackageFolder)'
    ArtifactName: packages
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
